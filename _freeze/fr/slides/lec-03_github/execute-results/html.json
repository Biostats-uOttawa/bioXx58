{
  "hash": "fcb738facb6785f09191b35b3444b9ca",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Introduction to Git and GitHub\"\nsubtitle: \"with RStudio\"\nauthor: Julien Martin\ninstitute:  BIO 8940 - Lecture 3\ndate: today\nfrom: markdown+emoji\nformat:\n  revealjs: \n    width: 1600\n    height: 950\n    chalkboard: true\n    theme: [default]\n    css: [assets/theme_chalk/whiteboard-blue.css]\n#    output-location: column-fragment\n#    logo: assets/MAD_logo_small_rb.png\n    footer: BIO 8940 - Lecture 3\n    show-notes: false\n    mermaid-format: svg\n    mermaid:\n      theme: forest\n    output-ext: slides.html\n  html:\n    self-contained: true\n    number-sections: true\n    code-link: true\n    format-links: false\n    css: assets/css/notes.css\n    number-depth: 2\n    comments:\n      hypothesis: true\n    mermaid-format: svg\n    mermaid:\n      theme: forest\n    output-ext: notes.html\neditor:\n  render-on-save: true\n---\n\n\n\n\n## Learning expectations\n\n\n\n\n\n\n\n\nThis won't even touch the surface of git... But! Hopefully, you:\n\n- Recognize the power of using version control\n\n- Know the basic tools to get started using git\n\n- Where to go for help\n\n::: aside\nCredit: I borrowed slides from [Olivier Gimenez](https://oliviergimenez.github.io)\n:::\n\n## Getting started\n\nYou need:\n\n* RStudio or VS Code\n\n* R\n\n* a github account\n\n* git software\n\n* R packages:\n  * `usethis`\n  * `gitcreds`\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\n\n\n# Workflow\n\n## Rings a bell?\n\n![](http://www.phdcomics.com/comics/archive/phd101212s.gif){fig-align=\"center\"}\n\n## Is your workflow...\n\n![](assets/img_l3/definitions.jpg){fig-align=\"center\"}\n\n## Why reproducible science?\n\n![](assets/img_l3/natureCapture.png){fig-align=\"center\"}\n\n\n## RStudio Projects\n\n[Use RStudio projects to keep materials associated with a particular analysis together]{.emph}\n\n:::: {.columns}\n\n::: {.column}\n- **Self contained** and **portable**\n\n- **Working directory set to root** of project on launch\n\n- **Fresh session** everytime the project is launched\n\nSee Jenny Bryan's post on [**project oriented workflows**](https://www.tidyverse.org/articles/2017/12/workflow-vs-script/) for more details\n:::\n\n::: {.column}\n\n**File > New Project > New Directory**\n\n![](assets/img_l3/new_project.png){fig-align=\"center\"}\n:::\n\n::::\n\n\n## Alternatives to RStudio Projects\n\nSo You don't like `RStudio` üíî\n\n:::: {.columns}\n\n::: {.column}\nEssentially a **Rstudio Project**:\n\n- organise all the files within a given project folder\n\n- set project folder as *working directory*\n\n- ensure a fresh, clean session\n:::\n\n::: {.column}\n**simply, do the same without using RStudio ü§©**\n:::\n\n::::\n\n# Version Control\n\n## What is it? ü§î\n\nThe **management of changes** to documents, computer programs, large web sites and other collections of information.\n\n### Git ![](https://git-scm.com/images/logos/downloads/Git-Logo-2Color.png){height=\"75px\"}\n\nOpen source (free to use) **Version control software.**\n\n### GitHub ![](https://raw.githubusercontent.com/annakrystalli/rrresearch/master/docs/assets/github_logo.jpg){height=\"75px\"}\n\nA [**website**](https://github.com/) that allows you to **store your Git repositories online** and makes it easy to collaborate with others.\n\n## Getting started with Git and GitHub\n\n1. Create an account on GitHub\n  * You set your username, email and password here\n\n2. install `git` on your computer\n  * Windows: <https://gitforwindows.org/>\n  * MacOS: need Xcode tools. so shell/terminal: `xcode-select --install`\n  * Linux:\n      * debian-based: `sudo apt install git`\n      * Fedora, RedHat: `dnf install git`\n\n3. You might need to restart you computer\n\nFor more details got to <https://git-scm.com/downloads>\n\n## Git, Github & IDE\n\n**Before** git only through the terminal üò¢\n\n::: {.content-visible when-format=\"revealjs\"}\n. . .\n:::\n\n**Now** git can be used via multiple user-friendly interfaces\n\nRStudio + `usethis` üì¶ + `gitcreds` üì¶ ==\n‚ù§Ô∏è `Git` & `GitHub` ü§©\n\n::: {.content-visible when-format=\"revealjs\"}\n. . .\n:::\n\nBut When using VS Code\n\n![](https://media.giphy.com/media/UuebWyG4pts3rboawU/giphy-downsized.gif){fig-align=\"center\"}\n\n\n# Configure git & GitHub\n\n**to be done only once**\n\n## Configure git\n\n**To check your configuration**\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nusethis::git_sitrep()\n```\n:::\n\n\n\n\n**Set your configuration**\n\nUse your github username and and the email you used to sign-up on GitHub\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nusethis::use_git_config(\n   user.name = \"JulienGAMartin\",\n   user.email = \"julien.martin@uottawa.ca\")\n```\n:::\n\n\n\n\n## Configure GitHub authentication\n\n### Get GITHUB Personal Authorisation Token\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nusethis::create_github_token()\n```\n:::\n\n\n\n Need scopes *repo, users, workflows* at least\n\n![](assets/img_l3/browse_github.png){fig-align=\"center\"}\n\n## Configure GitHub authentication\n\n[Store your git token with credentials]{.emph}\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ngitcreds::gitcreds_set()\n```\n:::\n\n\n\n\nProvide your github PAT token in the window\n\n![](assets/img_l3/credentials.png){fig-align=\"center\"}\n\n::: {.content-visible when-format=\"revealjs\"}\n. . .\n:::\n\nRestart RStudio and R\n\n**Git and github access should be configured now**\n\n## First (or new) project with Rstudio\n\n**Might be problematic the first time you do it**\n\n1. create R project\n\n2. initialise it for git\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nusethis::use_git()\n```\n:::\n\n\n\n3. Accept the commit and restart R\n\n4. In R, to create github repo and link it\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nusethis::use_github()\nusethis::git_vaccinate()\n```\n:::\n\n\n\n\n5. Check on github that the repos is there\n\n**et voila**\n\n## New project and NOT Rstudio\n\n### Option 1\n\n1. create new empty folder for your project(no space, no accent)\n\n2. add at least one file in it (suggest README.md)\n\n3. using terminal/shell\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.bash .cell-code}\ngit init\ngit add .\ngit commit -a -m \"first commit\"\n```\n:::\n\n\n\n\n4. In R, to create github repo and link it\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nusethis::use_github()\nusethis::git_vaccinate()\n```\n:::\n\n\n\n\n5. Check on github that the repos is there\n\n**et voila**\n\n## New project using GitHub and NOT Rstudio\n\n### Option 2\n\n1. Create new repository on `github`\n\n2. Set R working directory where you want to save your project\n\n3. To clone (and link) github repo to your computer\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nusethis::create_from_github(\n  \"https://github.com/your_github/your_repo.git\",\n  destdir=\".\")\n```\n:::\n\n\n\n\n4. Check that your folder has been created where you want it\n\n\n**et voila**\n\n## Integrated graphical user interface\n\n![](assets/img_l3/git_tab.png){fig-align=\"center\"}\n\n## Git terms\n\n* **repository** your project folder\n\n* **commit** a snapshot of your repo\n\n* **push** send commits to a remote\n\n* **pull** get commits from a remote\n\n::: {.content-visible when-format=\"revealjs\"}\n. . .\n:::\n\n* **clone** get the repository from the remote for the first time\n\n* **branch** a movable label that points to a commit\n\n* **merge** combining two branches\n\n* **remote** a computer or server with the repository on it\n\n## Git RStudio workflow\n\n:::: {.columns}\n\n::: {.column}\n[1.view file status]{.large}\n![](assets/img_l3/git_view.png){fig-align=\"center\"}\n\n[2.stage files]{.large}\n![](assets/img_l3/git_add.png){fig-align=\"center\"}\n:::\n\n::: {.column}\n[3.commit changes]{.large}\n![](assets/img_l3/git_commit.png){fig-align=\"center\"}\n:::\n\n::::\n\n## Share on GitHub\n\n#### 1. Create repo\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nusethis::use_github(protocol = \"https\")\n```\n:::\n\n\n\n\n![](assets/img_l3/my_new_repo.png){fig-align=\"center\"}\n\n## Share on GitHub\n\n#### 2. Push further changes\n\n![](assets/img_l3/push_github.png){fig-align=\"center\"}\n\n\n## Anatomy of a GitHub repo\n\n- **`README`**. Explain what your project is, and how to use it.\n  - `usethis::use_readme_md()`\n  - `usethis::use_readme_rmd()`\n\n::: {.content-visible when-format=\"revealjs\"}\n. . .\n:::\n\n- **`LICENSE`**. Without a licence, the contents of the repository are technically closed.\n  - Examples licence [CC-by](https://creativecommons.org/licenses/by/4.0/): `usethis::use_ccby_license(name = \"Julien Martin\")`\n  - `?licenses`: details of functions available to generate licenses\n  - [https://choosealicense.com/](https://choosealicense.com/) help on choosing a licence.\n\n::: {.content-visible when-format=\"revealjs\"}\n. . .\n:::\n\n- **`CONTRIBUTING.md`** - guidelines for contributors.\n  - `usethis::use_tidy_contributing()` provides a realtively strict but instructive template\n\n\n::: {.content-visible when-format=\"revealjs\"}\n. . .\n:::\n\n- **`CODE_OF_CONDUCT.md`** set the tone for discourse between contributors.\n  - `use_code_of_conduct()`\n\n\n## GitHub issues\n\n### use GitHub issues to plan, record and discuss tasks.\n\n![](assets/img_l3/github_issues.png){fig-align=\"center\"}\n\n## Why using a remote like GitHub ?\n\n* A backup of your repository (**Dropbox** is **NOT** a backup)\n\n* Work with others (not covered)\n\n* Increase your visibility\n\n* Increase interactions with users\n\n* Easy distribution of R packages (without CRAN submissions)\n\n\n::: {.emph .center}\none more time just in case\n**Dropbox** is **NOT** a backup\n:::\n\n## Branching and merging\n\n#### This the true Power of git\n\n![](assets/img_l3/git_cool_branch.png){fig-align=\"center\"}\n\n## Branching and merging\n\n:::: {.columns}\n\n::: {.column}\n#### Branching in Rstudio\n![](assets/img_l3/branching.png){fig-align=\"center\"}\n:::\n\n::: {.column}\n#### Pull request in Github\n\nWhen you want to merge branches:\n\n* create a pull request on Github\n\n* check for incompatibilities\n\n* then merge\n\n:::\n\n::::\n\n## Resources\n\n#### Check out [Happy Git and GitHub for the useR](https://happygitwithr.com/) for more joy with `git`\n\n\\\n\n#### The British Ecological Society has [A Guide to Reproducible Code in Ecology and Evolution](https://colauttilab.github.io/Readings/BES-Reproducible-Code.pdf)\n\n\n# Virtuous research cycle\n\n![](assets/img_l3/researchcycle.jpg){fig-align=\"center\"}\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}