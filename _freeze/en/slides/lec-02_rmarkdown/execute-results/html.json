{
  "hash": "992f9013475cedb2bff3ebe8a834145a",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Writing dynamic and reproducible documents\"\nsubtitle: \"An introduction to R Markdown / Quarto\"\nauthor: Julien Martin\ninstitute:  BIO 8940 - Lecture 2\ndate: today\nfrom: markdown+emoji\nformat:\n  revealjs: \n    width: 1600\n    height: 950\n    chalkboard: true\n    theme: [default]\n    css: [assets/theme_chalk/whiteboard-blue.css]\n#    output-location: column-fragment\n#    logo: assets/MAD_logo_small_rb.png\n    footer: BIO 8940 - Lecture 2\n    show-notes: false\n    mermaid-format: svg\n    mermaid:\n      theme: forest\n    output-ext: slides.html\n  html:\n    self-contained: true\n    number-sections: true\n    code-link: true\n    format-links: false\n    css: assets/css/notes.css\n    number-depth: 2\n    comments:\n      hypothesis: true\n    mermaid-format: svg\n    mermaid:\n      theme: forest\n    output-ext: notes.html\neditor:\n  render-on-save: false\n---\n\n\n\n\n\n\n\n<!-- To add / change\n\nadd something about quarto what is it and how is it different\n\n  -->\n\n\n\n\n{{< video https://www.youtube.com/embed/s3JldKoA0zw width=\"100%\" height=\"100%\" >}}\n\n\n\n\n\n\n\nCredit: [Ignasi Bartomeus, PhD](https://bartomeuslab.com/)\n\n##\n\n![](assets/img_l2/phd031214s.png){fig-align=\"center\"}\n\n# How can you reproduce results?\n\n## \n\n![](assets/img_l2/ctrlcctrlv.png){fig-align=\"center\"}\n\n## What do we need to make research reproducible?\n\n- Something to integrate text, figures and code\n     * `R`, `Python`, etc\n\n\n- Something that can be continuously edited and updated\n     * Living or dynamic document\n\n\n- Something that can be easily used in versioning tools\n     * Git\n\n##\n\n![](assets/img_l2/trio.jpg){fig-align=\"center\"}\n\n## Quarto ?\n\n* multi-language, next generation version of R Markdown \n\n* include many new new features and capabilities\n\n* Like R Markdown, Quarto uses knitr to execute R code, and is therefore able to render most existing Rmd files without modification.\n\n[![](assets/img_l2/quarto.png){fig-align=\"center\"}](https://quarto.org/){preview-link=\"true\"}\n\n\n## R Markdown workflow\n\n![](assets/img_l2/rmarkdown_workflow.png){fig-align=\"center\"}\n\n![](assets/img_l2/rmd_flow.png){fig-align=\"center\"}\n\n## Quarto workflow\n\n![](assets/img_l2/rstudio-qmd-how-it-works.png){fig-align=\"center\"}\n\n# Structure of a Rmd/qmd document\n\n##\n\n\n\n```{mermaid}\nflowchart TB\n  a(qmd/Rmd)\n  yaml(YAML frontmatter)\n  md(Markdown content)\n  knitr(Code chunks)\n  a --- yaml & md & knitr\n```\n\n\n\n\n## Rmd/qmd document\n\n![](assets/img_l2/3components.png){fig-align=\"center\"}\n\n## Rmd/qmd document\n\n![](assets/img_l2/3componentson.png){fig-align=\"center\"}\n\n\n# Markdown\n\n\n\n\n```{mermaid}\nflowchart TB\n  a(qmd/Rmd)\n  yaml(YAML frontmatter)\n  md(Markdown content)\n  knitr(Code chunks)\n  a --- yaml & md & knitr\n  style md fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n\n\n\n## What is Markdown?\n\n- A way to write stuff\n- Mostly plain words, with some formating\n\n![](assets/img_l2/md.png){fig-align=\"center\"}\n\n## Websites that use Markdown\n\n- GitHub <https://github.com/>\n- StackOverflow <https://stackoverflow.com/>\n- HackMD <https://hackmd.io>\n- Many more\n\n## Headers\n\n- Use # to create headers\n- Multiple #'s create lower level headers\n\n![](assets/img_l2/headers.png){fig-align=\"center\"}\n\n\n## Text\n\n- Text is rendered as plain text\n\n![](assets/img_l2/text.png){fig-align=\"center\"}\n\n\n## Lists\n\n- Use asterisks to make bullet points\n- Use numbers to make numbered lists\n- Use 4 spaces or 1 tab for indentation\n\n![](assets/img_l2/lists.png){fig-align=\"center\"}\n\n\n## Hyperlinks\n\n- To add a hyperlink, put your text between brackets\n- Then place the URL between parentheses\n\n![](assets/img_l2/url.png){fig-align=\"center\"}\n\n## Images\n\n- Use a link preceded by an ! to insert an image\n- The link text should be\n    - a URL if the image is hosted online\n    - a file path if the image is saved on your computer\n\n![](assets/img_l2/images.png){fig-align=\"center\"}\n\n\n## Equations\n\n- Write equations with Latex syntax\n\n![](assets/img_l2/eqns.png){fig-align=\"center\"}\n\n## Equation blocks\n\n![](assets/img_l2/eqns2.png){fig-align=\"center\"}\n\n## Tables\n\n```markdown\n| header A | header B  | header C |\n|:---------:|:--------:|---------:|\n| left      | center   | right    |\n\nTable: This is a title\n```\n\n| header A | header B  | header C |\n|:---------:|:--------:|---------:|\n| left      | center   | right    |\n\nTable: This is a title\n\n- A bit of a hassle...\n\n\n- Use a [generator of Tables for Markdown](https://www.tablesgenerator.com/markdown_tables)\n\n- Wait for next section to learn how to generate tables from `R`\n\n## R Markdown Reference Guide\n\n<https://rstudio.com/wp-content/uploads/2015/03/rmarkdown-reference.pdf>\n\n![](assets/img_l2/refguide.png){fig-align=\"center\"}\n\n\n# Knitr Code chunks\n\n\n\n\n```{mermaid}\nflowchart TB\n  a(qmd/Rmd)\n  yaml(YAML frontmatter)\n  md(Markdown content)\n  knitr(Code chunks)\n  a --- yaml & md & knitr\n  style knitr fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n\n\n\n## Embed code\n\n- Insert chunk of `R` code\n- Code will run and include results.\n\n![](assets/img_l2/embed.png){fig-align=\"center\"}\n\n## Inline code\n\n- Place code in a sentence with \n- Code will be replaced with results\n\n![](assets/img_l2/inline.png){fig-align=\"center\"}\n\n## Chunk options\n\nRmd (R markdown) and qmd (quarto) differ:\n  \n  * **Rmd**: chunk options on one line between the {} after the r\n  * **qmd**: either as Rmd or within the chunk with yaml style notation\n\n:::: {.columns}\n\n::: {.column}\nRmd\n\n```` markdown\n```{{r name, echo=FALSE}}\n1+1\n```\n````\n\nCan lead to really long lines\n:::\n\n::: {.column}\nqmd\n\n```` markdown\n```{{r}}\n#| label: name\n#| echo: false\n1+1\n```\n````\ntakes more vertical space but cleaner\n:::\n\n::::\n\n## echo\n\n- `echo = FALSE` or  `#| echo: false` hides code.\n\n![](assets/img_l2/echo.png){fig-align=\"center\"}\n\n## eval\n\n- `eval = FALSE` or `#| eval: false` prevents code from being run\n- No results is displayed, only code\n\n![](assets/img_l2/eval.png){fig-align=\"center\"}\n\n## fig.height, fig.width\n\n- Specify dimension of plots (in inches) with fig.width and fig.height\n- Separate multiple arguments with commas.\n\n![](assets/img_l2/figheightfigwidth.png){fig-align=\"center\"}\n\n\n## message\n\n- `message = FALSE` or `#| meassage: false`prevents messages from appearing\nin output\n\n![](assets/img_l2/message.png){fig-align=\"center\"}\n\n## Default chunk options\n\n- Repeating chunk options can be painful\n\n\n- If you have `echo = FALSE` in every single chunk, how to set the default chunk option to `echo = FALSE` ?\n\n\n- Use `knitr::opts_chunk$set(echo = FALSE)`\n\n\n- You may overwrite the default for each chunk\n\n\n- For chunk options, check out <https://yihui.name/knitr/options/>\n\n## Including tables\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# cars is a built-in-to-R data set of cars and their stopping distances\ncars %>%\n  head(4) %>%\n  knitr::kable(format = \"html\", caption = \"A kable table\")\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table>\n<caption>A kable table</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:right;\"> speed </th>\n   <th style=\"text-align:right;\"> dist </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 10 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 7 </td>\n   <td style=\"text-align:right;\"> 4 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 7 </td>\n   <td style=\"text-align:right;\"> 22 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n\n- The [`kable`](https://www.rdocumentation.org/packages/knitr/versions/1.21/topics/kable) package is often used with the [`kableExtra`](https://cran.r-project.org/web/packages/kableExtra/vignettes/awesome_table_in_html.html) package\n- A number of other packages are available for making pretty tables, by far my favourite is [`gt`](https://gt.rstudio.com/) using similar approach to table that `ggplot` has to figures\n\n## R Markdown Reference Guide\n\n<https://rstudio.com/wp-content/uploads/2015/03/rmarkdown-reference.pdf>\n\n![](assets/img_l2/knitr.png){fig-align=\"center\"}\n\n\n# YAML: Yet Another Markup Language\n\n\n\n\n```{mermaid}\nflowchart TB\n  a(qmd/Rmd)\n  yaml(YAML frontmatter)\n  md(Markdown content)\n  knitr(Code chunks)\n  a --- yaml & md & knitr\n  style yaml fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n\n\n\n## YAML in brief\n\n- Contains the metadata of the document\n\n- Starts and ends by three dashes\n\n- Comes first in the document\n\n## Simplest example\n\n![](assets/img_l2/yaml.png){fig-align=\"center\"}\n\n## Knit\n\n![](assets/img_l2/knit_rstudio.png){fig-align=\"center\"}\n\n## Output formats\n\n![](assets/img_l2/output_formats.png){fig-align=\"center\"}\n\n## Appearance and style\n\n**Rmd**\n\n- In HTML output, you can use `theme` or a custom **.css** style sheet\n\n- `theme` options ([bootswatch.com](https://bootswatch.com/)) : *“cerulean”, “journal”, “flatly”, “darkly”, “readable”, “spacelab”, “united”, “cosmo”, “lumen”, “paper”, “sandstone”, “simplex”, “yeti”*\n\n- You may also use LaTeX templates with R Markdown, and write [reproducible scientific paper](https://github.com/rstudio/rticles)\n\n\n**qmd**\n\n- this is were Quarto is leaps beyong R markdown \n\n- excellent doc on the [website](https://quarto.org/docs/guide/)\n\n# Managing bibliography\n\n## Reference file\n\n1. Put references in a plain text file with the extension **.bib**, in **BibTex** format (my advice: use [Zotero](https://www.zotero.org) and `betterbibtex` extension for dynamic file)\n\n```bibtex\n*@article{Shea2014,\n  author =        {Shea, Nicholas and Boldt, Annika},\n  journal =       {Trends in Cognitive Sciences},\n  pages =         {186--193},\n  title =         {{Supra-personal cognitive control}},\n  volume =        {18},\n  year =          {2014},\n  doi =           {10.1016/j.tics.2014.01.006},\n}\n```\n\n2. Reference this file in your YAML header and add a csl style for formatting (browse through and download styles at [zotero.org/styles](https://www.zotero.org/styles))\n\n```yaml\n---\ntitle: \"Citation test\"\noutput: html_document\nbibliography: example.bib\ncsl: my-style.csl \n---\n```\n\n## Citations\n\n3. In your text, citations go inside brackets and separated by semicolons\n\n\n:::: {.columns}\n\n::: {.column}\n### This...\nBlah blah [@Shea2014; @Lottridge2012].\n:::\n\n::: {.column}\n### turns into this...\n\nBlah blah (Shea et al. 2014; Lottridge et al. 2012).\n:::\n\n::::\n\n## Citations\n\n3. In your text, citations go inside brackets and separated by semicolons\n\n\n:::: {.columns}\n\n::: {.column}\n### This...\nBlah blah [@Shea2014; @Lottridge2012].\n\n@Shea2014 says blah.\n\nBlah blah [see @Shea2014, pp. 33-35; also @Wu2016, ch. 1].\n:::\n\n::: {.column}\n### turns into this...\n\nBlah blah (Shea et al. 2014; Lottridge et al. 2012).\n\nShea et al. (2014) says blah.\n\nBlah blah (see Shea et al. 2014, 33–35; also Wu 2016, ch. 1).\n:::\n\n::::\n\n\n## Citations\n\nFor an easy way to insert citations, try the [`citr`](https://github.com/crsh/citr) RStudio add-in.\n\nIf you are using `Zotero`, then RStudio can link directly for both Rmd and qmd files (same for VScode)\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](https://raw.githubusercontent.com/crsh/citr/master/tools/images/addin_demo.gif){fig-align='center' width=75%}\n:::\n:::\n\n\n\n\n# Notebook vs console in Rstudio\n\n## Notebook and console\n\nIn Rstudio, Rmarkdown file = notebook\n\nMeaning that R output:\n\n- are embedded in doc\n- not available in R envir and console\n\nIf you don't like the notebook and want the console, add to YAML header\n\n```\neditor_options:\n  chunk_output_type: console\n```\n\n## Notebook\n\n![](assets/img_l2/notebook.png){fig-align=\"center\"}\n\n\n## Console\n\n![](assets/img_l2/console.png){fig-align=\"center\"}\n\n\n## R Markdown Reference Guide\n\n<https://rstudio.com/wp-content/uploads/2015/03/rmarkdown-reference.pdf>\n\n![](assets/img_l2/pandoc.png){fig-align=\"center\"}\n\n\n# What else can we do with R Markdown/ Quarto?\n\n## Let's have a tour\n\n![](https://awesome-rmarkdown-2019.netlify.app/imgs/gallery.gif)\n\n## To go further\n\nMost of what works for R markdown works for Quarto\n\n### [R Markdown cookbook](https://bookdown.org/yihui/rmarkdown-cookbook/)\n\n\\\n\n### [R Markdown Guide](https://bookdown.org/yihui/rmarkdown/)\n\n\\\n\n### [Quarto website](https://quarto.org/)\n\n\n# Happy coding\n\n![](assets/img_l2/repro_rmarkdown.jpg){fig-align=\"center\"}\n\n::: aside\nI borrowed slides from [Garrett Grolemund](https://rstudio.com/speakers/garrett-grolemund/), [Ulrik Lyngs](https://ulriklyngs.com/), [Olivier Gimenez](https://oliviergimenez.github.io) . I also used the beautiful illustrations shared by [Allison Horst](https://github.com/allisonhorst/stats-illustrations)\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}